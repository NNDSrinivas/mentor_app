NagaDurga S Nidamanuri
Sr. Full Stack Engineer Email: srinivasn7779@gmail.com
Phone: +1(571)-325-9925
https://www.linkedin.com/in/nnd-srinivas

Summary:
•	Results-driven and detail-oriented professional with 9+ years of experience as a Senior Java Full Stack Developer, Senior DevOps Engineer, and Data Engineer. Proficient in designing, developing, and deploying robust and scalable enterprise applications, while implementing DevOps best practices to optimize software development workflows. Possesses extensive expertise in various technologies and frameworks, with a specialized focus on Java Full Stack Development and DevOps Engineering.
•	Experience in developing Professional Web applications and Enterprise solutions with complete SDLC from requirement gathering, analysis, designing, developing, testing, and deployment using Web Technologies like React, Flask, Redux, React Native, Angular, Node, SAAS, ECMA Script, HTML5, CSS3, JavaScript, TypeScript, Ajax, and jQuery, DOM, JSON, XML and AJAX.
•	Expertise through all parts of web applications using JAVA, J2EE, Python, Web Services, SOA, SOAP, RESTful etc.
•	Expertise in modern web architecture using various advanced JavaScript frameworks and libraries like Angular.js, Node.js, React.js/Redux, React Native, TypeScript, Bootstrap, Ember.js, and Responsive web design (RWD).
•	Working experience on ES5, ES6, ES7 and Typescript features for handling asynchronous data requests.
•	Experience in developing MERN (MongoDB 3x, Express.js, React.js and Node.js) and MEAN (MongoDB 3x, Express JS, Angular JS, and Node JS) stack application. Experience in developing single page application in MERN Stack.
•	Extensive hands-on experience in design and deployment of N-Tier enterprise applications for the J2EE platform using Core Java
Servlets, Struts, Spring, EJB, JSP, JPA, JSF, JNDI, JMS, JAX-RS, JAX-WS, and JMeter.
•	Strong experience in Spring Framework modules such as SpringCore, MVC, AOP (Aspect Oriented Programming), IOC (Inversion of Control), DAO (Data Access Object), IO, JTA, JDBC and Rules Engines (Drools).
•	Proficient in implementing various Design Patterns like MVC, Singleton, Session, Facade, Factory, DAO (Data Access Object), DTO (Data Transfer Object), and Front Controller.
•	Experience in developing cross-platform server-side applications using Node JS to achieve scalability in real-time.
•	Good working knowledge on Angular directives to create reusable elements and attributes, along with easy to test and maintain client-side interactivity in web applications.
•	Created Single page applications with Angular using TypeScript to create Directives, Components, Services, Pipes, Observables, Reactive/Template driven forms, and Router for multiple components utilizing Router Guards and Navigation.
•	Created Single page applications with React using Hooks and Redux for stateful management, along with class components and lifecycle methods for internal state management.
•	Developed small scale applications using Python on Flask & Django web framework.
•	Expertise in open-source libraries like Angular Material and redux-thunk for customized needs.
•	Experience in XML technologies like XML, DTD, XSL, XSLT, XPATH, JAXB, JAXP, SAX and DOM Parsers.
•	Experience in Requirement gathering & analysis, designing UML - for developing application-specific Object model, Use Case diagrams, Class diagrams, Sequence diagrams and State diagrams.
•	Proficient in utilizing cloud technologies, including AWS (Amazon Web Services), for developing and deploying applications.
•	Experienced with AWS services such as EC2, S3, IAM, Lambda, CloudFormation, Batch, Glue, RDS, ECS, EKS, and API Gateway
•	Knowledge of serverless architecture and hands-on experience with AWS Lambda for building serverless functions.
•	Familiarity with AWS Elastic Beanstalk for deploying and managing applications in a scalable and automated manner.
•	Experience working with AWS CloudFormation for infrastructure as code (IaC) and provisioning AWS resources.
•	Proficient in configuring and managing AWS RDS (Relational Database Service) for scalable and highly available databases.
•	Hands-on experience with AWS S3 (Simple Storage Service) for object storage and managing large-scale data.
•	Familiarity with AWS IAM (Identity and Access Management) for managing access and permissions to AWS resources.
•	Knowledge of AWS ECS (Elastic Container Service) and EKS (Elastic Kubernetes Service) for containerized application deployments.
•	Experience with API Gateway for building and managing RESTful APIs on AWS.
•	Expertise in working with server-side technologies including databases, Restful API and MVC design patterns.
•	Experienced in Apache Spark for implementing advanced procedures like text analytics and processing using the in-memory computing capabilities written in Scala.
•	Experience in Web servers like Tomcat, WebSphere, Jetty, JBoss and WebLogic.
•	Worked on SOA (Service Oriented Architecture) such as Apache Axis, SOAP, WSDL. Exposure to JAXB, JAX-WS & JAX-RS.
•	Familiar with monitoring logs and developing dashboards using Splunk.
•	Expertise with Messaging Service like Kafka, RabbitMQ apart from JMS.
•	Experienced on NoSQL databases – Cassandra & MongoDB.
•	Experience in RDBMS technologies like Oracle, MySQL, and Postgres using Functions, Triggers, and Stored Procedures and involved in the activity of complex queries, by using MySQL, DB2, Oracle
•	Strong experience in Unix & Linux Shell scripting Bash, Perl scripting.
•	Experience with CI/CD, ANT, Maven, Gradle, Jenkins, and version controls tools like Git, GitHub, Win CVS, CVS, SVN, VSS and Rational ClearCase.
•	Deployed applications (EAR, WAR) on Web Sphere Application servers and clusters.
•	Strong command on Bug tracking tools- Bugzilla and JIRA
•	Extensively used the Log4j to log regular Debug and Exception statements.
•	Hands-on experience with IDE’s- IntelliJ, Eclipse, STS (Spring Tool Suite) and NetBeans.
•	Experience in Agile (SCRUM), SDLC Methodology, Iterative, Waterfall, and Object - Oriented Application Design and Programming.
•	Quick to learn modern technologies and ability to work in tight schedules on different applications concurrently.

TECHNICAL SKILLS:
Languages: Java, Scala, Python.
DevOps Technologies: AWS, Terraform, Jenkins, Docker, Kubernetes, Rancher, Vagrant, Ansible, Scripting Languages, Git, Gitlab, Gerrit, Maven, New Relic, Splunk.
Frameworks: Spring Boot, Spring, Flask, Django, Hibernate, Spring Security.
Web Technologies: Servlets, JSP, JSF, JavaBeans, Servlet API.
Frontend Technologies: SAAS, ECMA Script 5/6, Ajax, DOM, json, XML, React Native, Redux, TypeScript, React JS, Angular JS, Backbone JS, HTML 5, JavaScript, XML, CSS, jQuery.
Server-Side Technologies: Node JS, Flask web framework, Python, Django.
Application/Web servers: Apache Tomcat, IBM WebSphere, Jenkins.
Relational Databases: Oracle, SQL, MySQL, DB2.
NoSQL Databases: Cassandra, MongoDB.
Cloud Environments: AWS, Kubernetes.
AWS: EC2, S3, IAM, Lambda, CloudFormation, Batch, RDS, ECS, EKS, API Gateway, Elastic Bean Stalk.
IDE: IntelliJ, Eclipse, NetBeans, Spring Tool Suite (STS), Web Storm.
Operating System: Mac, Windows, Linux Unix.
Bug tracking Tools: JUNIT, JIRA.
Reporting Tools: Jasper Reports, Crystal Reports XI, SSRS.
SOA (Service Oriented Architecture): Apache Axis, SOAP, WSDL.
Methodologies: Agile, Scrum, waterfall, TDD (Test-Driven-Development).
Developer IDE Platforms: IntelliJ, STS (Spring Tool Suite), Eclipse, JBuilder, Net Beans, GitHub.
Messaging service: Kafka, RabbitMQ.
Build Tools: Ant, Maven, Gradle.
Web Services: SOAP, REST, JAX-WS, JAX-RS, JAX-RPC.

Education:

  Master’s in information systems, Internet and webpage Design, Wilmington University, DE, USA-2016.   Bachelor of Computer Science and Engineering from JNTU, HYD, IND-2014.
Certifications:
Scrum Fundamentals Certified
Certification Date: Jul 2017 – Jul 2020, License 585424.

Experience:

Oracle (OHAI) 		                                                Mar 2024- Present
Senior Software Engineer
Roles & Responsibilities
•	Contributed to the “Reimagine” initiative by rewriting legacy modules into modern full-stack applications using Java (Spring Boot), C#, .NET Framework, React, and Oracle JET.
•	Integrated Oracle JET with React components to deliver a hybrid UI for legacy and new screens with consistent design and accessibility compliance (WCAG 2.1).
•	Enhanced patient care workflows by restructuring clinical lab application logic and improving backend service performance by ~40%.
•	Designed and consumed secure RESTful APIs for inter-application communication between lab modules and Oracle backend services.
•	Remediated security vulnerabilities flagged via OCI Anchore scans across multiple microservices and Docker images.
•	Upgraded and refactored insecure packages while maintaining backward compatibility.
•	Collaborated with the OCI TVM (Threat & Vulnerability Management) team to raise Security Deviation Requests (SDRs) for false positives or unpatchable vulnerabilities.
•	Implemented security hardening for Docker images and validated using CI/CD scans and internal DevOps pipelines.
•	Participated in Jenkins-based CI/CD pipelines for build, test, and secure deploy workflows for internal APIs.
•	Managed Terraform-based infrastructure changes through collaboration with platform engineering teams.

Concerto Health AI 	Nov 2020 – Feb’2024
Senior Java Full Stack Developer/Senior DevOps Engineer/Data Engineer
Roles & Responsibilities:
•	Worked for “Tenor” application design, development and maintenance and “Soprano” teams.
•	Led Herculean multidisciplinary team to achieve AstraZeneca NLP deliverables, collaborating with 4 companies (AZ, ASCO/CancerLinQ, Tempus) on targeted curation of 6 Lung Cancer Cohorts.
•	Successfully led cross-functional teams and provided expert guidance to junior developers, fostering a collaborative and high- performing work environment.
•	Designed and implemented an efficient data processing pipeline handling large-scale patient data, totaling several terabytes (TBs), received in diverse file formats (.tiff, .png, .txt, .pdf, ocr.txt). Leveraged AWS Batch for seamless Optical Character Recognition (OCR) processing of each batch, ensuring accurate extraction of critical information. Subsequently, loaded the processed data into MongoDB, providing accessible and curated patient data for internal curators.
•	Built and maintained ‘Tenor’, an OCR automation platform using Java, Spring Boot, AngularJS, and MongoDB — reduced document processing time by 60%.
•	Collaborated with pharma stakeholders to drive data readiness for ML models supporting real-world evidence (RWE) use cases.
•	Streamlined secure data delivery across internal/external endpoints using Python, Jenkins, and S3, optimizing SLA compliance and availability.
•	Delivered integrated solutions across DevOps (Docker, Ansible, Kubernetes) and microservices in multi-tenant clinical research environments.
•	Championed cloud cost optimization efforts, saving ~$150K annually through EC2 instance refactoring and data tiering in S3.
•	Key responsibilities involved managing and processing large volumes of unstructured patient data from various clients like CLQ, AON, Caris, AbbVie etc.
•	Recognized for the ability to inspire and mentor team members, driving individual growth and team cohesion for enhanced project outcomes.
•	Principal contributor with a key role in the successful design and development of the Tenor application and data pipeline.
•	Demonstrated leadership in creating scalable and efficient solutions, contributing to the seamless flow of data, and maintaining high data integrity standards.
•	Valuable contributor to Clinical Project Management team, ensuring on-time delivery of high-quality data, resolving issues with precision, and embodying a customer-centric approach.
•	Collaborated with data scientists and analysts to understand data requirements and implement ETL solutions using AWS Glue for data integration and transformation.
•	Developed and validated innovative algorithms for high-accuracy extraction of clinical data from millions of documents.
•	Proactively supported and assisted 200+ curators a day within the organization by promptly resolving application-related inquiries, ensuring smooth and uninterrupted access to essential resources.
•	Performed a successful migration of the database from Oracle to MongoDB.
•	Integrated Jira with Crucible, GitHub, and Okta with AWS SSO and RStudio.
•	Involved in developing UI using Spring MVC framework, JSP, JSTL, HTML5, CSS, JavaScript, jQuery, AJAX, and Angular JS.
•	Created Reusable Modules and Custom Directives in Angular which got used in various places of application.
•	Implemented AngularJS Controllers to maintain each view data and implemented Angular Service calls using Angular Factory, tested all application controllers extensively with AngularJS built-in testing facilities.
•	Utilized JSON, jQuery, and Ajax for asynchronous data exchange and seamless user experience. 
•	Used Java 8 features in developing the code like Lambda expressions, creating resource classes, fetching documents from database.
•	Used design patterns like Singleton, Data Access Objects, Factory and MVC patterns.
•	Testing and production support of core java based multithreading ETL tool for distributed loading XML data into Oracle database using JPA/Hibernate.
•	Created POJO's and DAOs for the database entities using Spring JDBC annotation mappings.
•	Developed microservices with Spring and tested the application using Spring Boot.
•	Used Spring Core annotations for Spring Dependency Injection, Spring MVC for Rest API's, Spring Boot for microservices.
•	Worked on Spring Frameworks Spring IOC, Spring Boot, Spring Cloud and using third party libraries.
•	Implemented security features like authentication and authorization using Spring Security in Spring Boot applications.
•	Implemented Rest based web service using JAX-RS annotations, Jersey provider implementation.
•	Implemented REST APIs and microservices for data retrieval and integration. And developed web services using REST for seamless data exchange and integration.
•	Developed RESTful APIs using Scala and JSON libraries like Circe, Play JSON for seamless communication between services.
•	Integrated Scala application with various data storage systems MongoDB and Elasticsearch
•	Worked with JSON web tokens for authentication and authorization security configurations using Nodejs.
•	Developed the persistence layer using Hibernate Framework by configuring the 1:1/1:M/M:M mappings in hibernate files and created DAO and POJO.
•	Used log4j to print the logging, debugging, warning, info statements.
•	Designed and developed Web services, JAX-RPC, JAX-WS, RM1, JTA, JMS and XML, XSD, XSLT, X-Path.
•	Wrote build scripts using Maven.
•	Setting up the build and deployment automation for Java base project by using Jenkins and Maven.
•	Developed and implemented an automated infrastructure using Puppet, wrote Puppet models for installing and managing java versions, wrote a python plugin for collected to write metrics to state.
•	Gathering requirement from the Clients and providing consultation by performing POC and setup the Build/Deployment and Release management.
•	Implementing a Continuous Delivery framework using Jenkins, CHEF, Maven in Linux environment.
•	Created scripts to automate AWS services which include web servers, ELB, Cloud front Distribution, database, AWS EC2 and database security groups.
•	Deployed the application on Amazon Web services (AWS) and used it to provide a large computing capacity for scalable solutions.
•	Responsible for building out and improving the reliability and performance of cloud applications and Cloud infrastructure deployed on Amazon Web Services.
•	Leveraged AWS Lambda for serverless computing, enabling efficient execution of event-driven tasks.
•	Leveraged MongoDB for flexible and scalable data storage, implementing ETL processes with AWS Glue to handle large volumes of data.
•	Developed and validated innovative algorithms using AWS Glue for high-accuracy extraction of clinical data from millions of documents, resulting in a 30% improvement in data accuracy.
•	Worked with various AWS tools like Batch, S3, Lambda, CloudFormation, and IAM in conjunction with AWS Glue for managing ETL workflows and cloud-based data processing.
•	Utilized AWS CloudFormation for infrastructure as code, ensuring consistent and reproducible deployments.
•	Implemented monitoring and log management using AWS CloudWatch for real-time system monitoring and analysis.
•	Deployed the application on Amazon Web services (AWS) and used it to provide a large computing capacity for scalable solutions.
•	Assigned Roles and Policies to Users, Security Groups by using Identity and Access Management (IAM) service in AWS.
•	Using Packer, Terraform and Ansible migrated legacy and monolithic systems to Amazon Web Services.
•	Demonstrated expertise in data migration and processing, involved in moving data from C1 environment to S3, uploading it to Redshift, and performing codification and normalization.
•	Conducted thorough quality checks using automation script and collaborated closely with Subject Matter Experts (SMEs) for data validation and iterative improvements.
•	Effectively managed the end-to-end pipeline, ensuring seamless data flow and timely delivery of codified and normalized curated patient’s data ready for downstream consumption.
•	Experienced in setting up the continuous Integration (CI) and continuous Deployment (CD) process for the application using the Jenkins to integrate and deploy code on CI environments for development testing.
•	Developed CI/CD system with Jenkins on Kubernetes environment, utilized Kubernetes and Docker for the runtime environment.
•	Worked with OpenShift platform in managing Docker containers and Kubernetes Clusters.
•	Employed Linux shell scripting and bash scripting for automation of deployment and operational tasks.
•	Utilized Kubernetes for container orchestration, managing the deployment, scaling, and operation of containerized applications.
•	Utilized AWS services such as IAM, S3, EC2, Batch, and CloudFormation for infrastructure management and deployment.
•	Collaborated with development teams to optimize application performance, troubleshoot issues, and implement scalability solutions.
•	Utilized CURL to transfer data to the server using available protocols, ensuring secure and efficient data transfer and integration with other systems.
•	Used Chef Server and workstation to manage and configure nodes, installed Chef Server and clients to pick up the Build from GIT
repository and deploy in target environments.
•	Used Gradle build tool to automate the process of generating docker files, building Docker Images and pushing them to Docker Private Registry.
•	Source code management is performed using GIT from master repository and knowledge on container management using Docker in creating images.
•	Utilized Git for version control, ensuring code integrity, collaboration, and efficient code management.
•	Implemented MVC architecture in developing the web application with the help of Django framework.
•	Developed views and templates with Python and Django's view controller and template language to create a user-friendly website interface.
•	Performed client-side validations using JavaScript and server-side validations using Django.
•	Designed and implemented data pipelines using Python, leveraging libraries (pandas and NumPy) for data processing and analysis.
•	Utilized Python scripting to automate tasks across the organization, improving efficiency and reducing manual effort.
•	Created a Python process hosted on Elastic Beanstalk to load the Redshift database daily from several source.
•	Provided access to data necessary to perform analysis on scheduling, pricing, bus bunching and performance. Queries in the Redshift environment performed 100-1000x faster than in legacy environments.
•	Utilized Apache Kafka for reliable and scalable data streaming and event processing.
•	Utilized MongoDB for flexible and scalable data storage, implementing CRUD operations.
•	Experience in NoSQL database like MongoDB installation, configuration, managing extremely large data sets and in designing MongoDB multi-shared cluster and monitoring with MMS.
•	Used JIRA tool for Issue/bug tracking, monitoring of work assignment in the system.

Environment: Java, Python, Spring Boot, Spring MVC, Spring Core, Django, Hibernate, MongoDB AWS, Angular, HTML5, CSS3, JavaScript, JSON, jQuery, Ajax, Jenkins, Scala, Docker, Ansible, Kubernetes, AWS (Batch, EC2, S3, IAM, Lambda, Glue, CloudFormation), Linux, shell scripting, bash scripting, Springs(IOC,AOP, JDBC)Frameworks, Spring Boot, DNS, , Maven, GIT, Splunk, Apache Kafka, Microservices, JSP, RESTful Web services, NoSQL, Log4j, Jira

Comcast, Mt. Laurel, NJ	Oct 2019 – Oct 2020
Sr. Java/ J2EE Full Stack Developer
Roles & Responsibilities:
•	Used core Java Collections, Exception Handling, Multi-Threading, Serialization and Java 8 features like Lambda expressions, Stream API, Bulk data operations on Collections which would increase the performance of the Application, facilitate pipeline processing and Method references.
•	Implemented redux to resolve application's global state management, especially for user login status, Enhanced user experience with React's life cycle methods, including componentDidMount, shouldComponentUpdate, componentWillUnmount, etc.
•	Utilized React Router for client-side routing, enabling seamless navigation between different views and enhancing user experience.
•	Implemented state management using Redux, ensuring efficient handling of application-wide data, and improving data flow.
•	Leveraged React Hooks such as useState, useEffect, and useContext to manage state and side effects in functional components, leading to more maintainable and concise code.
•	Integrated Material-UI to enhance the visual design and maintain consistency in the user interface of the web application.
•	Implemented authentication and authorization in the React-based front-end using JWT (JSON Web Tokens) for secure user access to sensitive data and actions.
•	Employed server-side rendering (SSR) using Next.js to improve application performance and SEO for better search engine visibility.
•	Utilized Node.js as the back-end technology to handle server-side operations and API development for the Spring Boot web application.
•	Created RESTful APIs using Express.js in Node.js to enable seamless communication between the front-end and back-end components.
•	Developed RESTful APIs using Spring Boot to handle server-side operations for device purchase, order, and new account functionalities.
•	Implemented Spring Security for authentication and authorization, ensuring secure access to sensitive data and actions.
•	Utilized Spring Data JPA to interact with the database, allowing seamless data retrieval and manipulation.
•	Implemented data caching and session management using Redis in Node.js, optimizing application performance & response time.
•	Utilized WebSocket technology with Node.js to enable real-time communication and data exchange between clients and the server, enhancing user interactions.
•	Utilized React Native components and libraries to create a native-like user interface and experience for both iOS and Android platforms.
•	Integrated Redux Thunk middleware with React Native to manage asynchronous operations and data fetching, ensuring smooth app performance.
•	Implemented offline data storage using React Native's AsyncStorage or SQLite, enabling users to access essential features even without an internet connection.
•	Using Maven's convention over configuration approach, reducing the need for custom configurations. Leveraged Maven to build and manage Java projects efficiently. And managed project dependencies through Maven's centralized repository system.
•	Experience in writing Maven build scripts and configuring and using Log4j.
•	Used AXIOS for HTTP requests and attached Bearer token for secure usage of API and Used node/sass for quick development.
•	Used J2EE design Patterns like MVC (Model View Controller), Singleton, Factory, DAO (Data Access Object), DTO (Data Transfer Object) and Service Locator.
•	Worked with Node JS framework including authoring complex directives, services, controllers, and filters.
•	Used Bootstrap CSS for dialogs, tabs, date picker, model pop ups to implement UI model.
•	Used Spring IOC (Inversion of Control) for injecting the beans and reduced the coupling between the classes.
•	Developed views and controllers for client and manager modules using Spring MVC and Spring Core.
•	Implemented the application using Spring Boot Framework and handled Security using Spring Security
for implementing authentication, authorization, and Access-Control features.
•	Developed front end modules and consumed various Web services in the business layer using REST and SOAP.
•	Implemented Restful Web Services to retrieve data from client side using Micro Services architecture.
•	Successfully integrated OAuth with Comcast's internal identity and access management system, enabling secure access to customer data while adhering to internal policies and protocols.
•	Used Hibernate extensively to have Database access mechanism with complex queries through Hibernate Query Criteria interfaces and Hibernate to deal with the database.
•	Implemented Hibernate Connection Pooling, HQL, Hibernate Caching, Hibernate Transactions.
•	Used Micro Service architecture, with Spring Boot based services interacting through a combination of REST and MQ message brokers and leveraging AWS to build, test and deploy Identity Micro Service.
•	Implemented Micro Services using PCF (Pivotal Cloud Foundry) platform build upon AWS.
•	Managed AWS (Amazon Web Services) like EC2, S3 bucket, ELB, Auto-Scaling, SNS, SQS, AMI, IAM, VPC (Virtual Private Cloud), Cloud Front through AWS Console and API Integration.
•	Responsible for creating and Launching Amazon EC2 Cloud Instances using Amazon Images (Linux/Ubuntu) and configuring launched instances with respect to specific applications for deployment of application.
•	Experience with container-based deployments using Jenkins, Docker, and Kubernetes.
•	Used the Kubernetes commands for creating the Auto scaling for platform service OpenShift.
•	Experience in migrating data from Oracle database using Spring JDBC to Apache Cassandra NoSQL Database.
•	Wrote stored procedures and other database items to support the main application (Oracle, PL/SQL).
•	Used Apache Kafka (Message Queues) for reliable and asynchronous exchange of important information between multiple business applications.
•	Writing Splunk Queries, Expertise in searching, monitoring, analyzing and visualizing Splunk logs.
•	 Hands on experience in customizing Splunk dashboards, visualizations, configurations using customized Splunk queries.
•	Responsible with Splunk Searching and Reporting modules, Knowledge Objects, Administration, Add-On's, Dashboards and Forwarder Management.
•	Migrated complex Map Reduce programs into Apache Spark RDD transformations.
•	Used CURL to transfer data to server using available protocols and test the custom STS modules.
•	Responsible for the implementation of JMS/RabbitMQ to enhance the application's web service.
•	Configured and deployed Apache Tomcat, RabbitMQ, Redis Cache servers.
•	Used Postman to streamline API development and testing processes and created and managed API requests in Postman for various HTTP methods (GET, POST, PUT, DELETE) to interact with RESTful APIs.
•	Organized API requests into collections and folders within Postman, ensuring efficient project management and easy collaboration with team members.
•	Tuning the heap size parameters and JVM's Garbagecollector for WebLogic/Jboss application servers.
•	Leveraged JIRA add-ons and plugins to extend functionality and integrated with other Atlassian tools Confluence and Bitbucket
for enhanced collaboration. Also, Integrated Gradle with IDEs IntelliJ IDEA and Eclipse.
•	Worked on Jenkins for continuous integration and for End-to-End automation for all build and deployments.
•	Managed Jenkins agents and nodes for distributed build and testing processes.
•	Scheduled and automated tasks using Jenkins job scheduler and responsible for setting up Jenkins to send notifications and alerts on build failures or other events.
•	Responsible for setting up and configuring Jenkins pipelines for automated build, test, and deployment processes and integrated
Jenkins with GitHub to trigger automated builds on code changes.

Environment: Java, React, Spring, Hibernate, Spring Boot, Microservices, HTML5, CSS3, JavaScript, Node JS, NPM, Postman, Design Patterns, AWS, JBoss, Apache Kafka, PCF, Mockito, RESTful, SOAP, JMS, CURL, TestNG, SOAP UI, JMeter, Apache Spark, RabbitMQ, Redis Cache, NoSQL, Cassandra, JUnit, Git, Maven, Jenkins, Log4j, JIRA, Linux, GitHub, Oracle, Angular, Vue.js, GraphQL, Docker, Kubernetes, Security (JWT, OAuth), Data Visualization (D3.js, Chart.js), Machine Learning (TensorFlow, scikit-learn), Big Data (Hadoop, Apache Spark, Kafka), Mobile Development (Android, iOS).
 
National Institute of Health (NIH/NIDA), Bethesda, MD.                                                   Oct 2017 – Sep 2019 
Java/J2EE Full Stack Developer
Roles & Responsibilities:
•	Worked for the NIDA application development team following the Agile Scrum methodology to create full stack application.
•	Involved in Analysis, Design, Development, System Testing and UAT (User Acceptance Testing), followed by Agile methodology in the Scrum Cycle model.
•	Designed and developed various helper classes using core Java concepts such as OOP Concepts, Collections Framework, Exception Handling, I/O System, Multi-Threading, JDBC.
•	Involved in designing and implementation of Session, Facade, BusinessDelegate, ServiceLocator patterns to delegate request to appropriate resources.
•	Used Angular JS as framework to create a Single Page Application (SPA) which can bind data to specific views and synchronize data with server using SASS, Bootstrap.
•	Used various features in AngularJS like data binding, routing, custom filters, custom directives to meet various customized requirements, Implemented REST-based web services with Angular JS.
•	Used the HTTP services in Angular JS to make API calls and exchange data in JSON.
•	Used Angular Dependency Injection to inject Angular Services and Custom services as well as built Custom Directives to provide reusable component.
•	Extensively used jQuery, NodeJS in implementing various GUI components in application portal.
•	Used jQuery to make the application highly interactive and used JSON objects effectively for client-side coding.
•	Built Web pages that are more user-interactive using jQuery plugins for Drag and Drop, AutoComplete, AJAX, JSON, and JavaScript, Bootstrap.
•	Perform API development module integration and web designing using Angular JS, Spring MVC.
•	Designed and developed application in 3 tier Architecture, implemented Spring MVC Model2 framework as backend, persistence layer is developed in Hibernate.
•	Worked with controller, service and view components in applications using Spring framework, Spring IOC for loose coupling between UI Layer, Service Layer and Persistence Layer.
•	Used Spring Boot which is radically faster in building cloud Micro services and develop Spring based application with very less configuration, access logging for Spring Boot Application.
•	Used SOAPUI for testing the web services by sending a SOAP request.
•	Designed and developed Micro services using REST framework and Spring Boot.
•	SOA (Service Oriented Architecture) was exposed through RESTful web services with loose coupling between layers using Spring Framework during development.
•	Consuming and exposing various Web Services using JAX-RS and JSON to different systems for business services, developed complex Web Services and tailored JAX-RS API to suit the requirement.
•	Involved in developing the multiple enterprise applications, which are developed using Spring MVC framework, Hibernate framework, RESTful web services.
•	Consuming and exposing various Web services using JAX-WS to different systems like NPI Validation, Address validation, Ajax method calls RESTful web services from the client UI.
•	Registered Swagger to the REST Application and annotated the Rest services to generate Swagger documentation.
•	Used HQL, Named Parameters, Named Queries, and Interfaces such as Expression, Query and Criteria for implementation of Hibernate template and extensively used Hibernate Cache, Hibernate mappings, Lazyloading transactions and Locking’s.
•	Developed Asynchronous multi-module applications using RabbitMQ Message broker and setting up cluster environment using HA Proxy.
•	Monitored and analyzed the Splunk Logs. And used Gemfire distributed in-memory data grid cache for persisting application related cache objects to make the application more scalable.
•	Experience in using NoSQL (MongoDB) data models document, key-value & wide column, or graph model.
•	Designed and developed Oracle PL/SQL Procedures, Functions, and Database Triggers and involved in creating and updating Packages to meet business requirements.
•	Worked with JMS Handling and managing exception conditions.
•	Consumed messages from JMS-Message driven beans and Integrated with ActiveMQ service with Beans.
•	Strong application integration experience using Mule ESB with Connectors, transformations, Routing, ActiveMQ, JMS and RAML, Cloud hub, Data Transformations using Mule ESB.
•	Implemented AWS solutions using EC2, S3, RDS, EBS, ElasticLoadBalancer, Auto-scaling groups.
•	Install and configure the Cloud Management application for the provider (AWS).
•	Extensive experience in using Build Automation DevOps tools like, ANT, Maven, Artifactory/Nexus, Anthill Pro and Hudson/Jenkins, Bamboo.
•	UI development using GWT, developing reusable widgets/ table/ grids and complex UI component.
•	Got exposure to build and deploy the changes in a production environment by executing the build script and deploying the compiled GWT client-side code and server-side code to the production server.
•	Installed, configured, and administered JBoss as a standalone Dev environment.
•	Install, deploy, and support infrastructures, applications, software solutions and technology initiatives on JBoss.
•	Used Jenkins as a primary tool for implementing the CI/CD during code releases, worked with CI/CD pipeline to build and deploy transcoding application on AWS.
•	Used Jenkins to build the entire application and to send email notifications in the event of build failures.
•	Log4j was used to monitor the error logs. Used GitHub repository as version control tool.

Environment: Java, Spring, Hibernate, Spring Quartz, Spring Boot, Maven, RabbitMQ, JPA, JSF, JUnit, TestNG, Angular JS, Node JS, HTML, AWS, jQuery, JMS, Microservices, Splunk, CI/CD, JMeter, PL/SQL, REST, SOAP, MongoDB, JBoss, IBM Web Sphere, ActiveMQ, Mule ESB, NoSQL, Linux, GitHub, and Oracle.






 
American Express, NY	Jan 2016 – Oct 2017
Java/ J2EE Full Stack Developer Roles & Responsibilities:
•	Worked for “Select & Redeem” and “Enablement” teams.
•	Experienced with Software Development Life Cycle (SDLC) with object oriented of business process and worked on developing Service oriented architecture applications in agile development environment.
•	Used J2EE design patterns such as Singleton and DAO (Data Access Object) in the implementation of the services.
•	Developed UI (User Interface) module using Struts Framework, JSF, JSP, Servlets, HTML, DHTML and implemented code MVC2 framework using JSP's JavaBeans& Servlets.
•	Developed frontend of application using AngularJS framework. Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like jQuery, JavaScript.
•	Created services for various modules like Account Creation and Maintenance using Spring framework, Responsible for maintaining Content Management System on daily basis.
•	Implemented logging in the application using Spring AOP module to know the application status. Used Spring DAO module for performing CRUD operations on database.
•	Used Spring AOP for cross cutting concerns and implemented Transaction Management using Spring AOP.
•	Implemented various features of spring framework such as Dependency Injection, IOC, Annotations and Spring Integration with Hibernate.
•	Responsible for design and developing Persistence classes using Hibernate, and Spring JDBC Template frameworks to save data in database tables.
•	Used Spring Transaction management API’s and coordinates transactions for Java objects.
•	Developed Restful Web services in JAX-RS using Jersey to provide domain data to the application.
•	Created Maven archetypes for generating fully functional REST web services supporting both XML and JSON message transformation.
•	Developed the CRUD and transferred data as JSON format using RESTful webservices to controller layer.
•	Worked on HibernateORM. Created Hibernate XML files and Java class files to map the object relation mappings, Used HQL (Hibernate query language).
•	Provided data persistence by ORM (object relational mapping) via Hibernate for application save, update, delete operations.
•	Used JSP for presentation layer, developed high performance object/relational persistence and query service for entire application utilizing Hibernate.
•	Provided efforts estimate and coordinated the test schedule using agile testing methodology in UAT phase.
•	MQ was used to provide a single unifying transport that reduces cost and maintenance efforts, including support for HTTP, REST and JMS.
•	Developed generic Java packages to produce and consume JMS messages through topics and queues in asynchronous message processing with guaranteed delivery, Used IBM MQSeries as the JMS provider.
•	Monitored and performed testing in various environments like Development, Test, UAT and Production.
•	Creation of database objects like tables, views, Indexes on tables, synonyms, materialized views, Stored procedures, packages using oracle tools like SQL Plus.
•	Developed SQL and PL/SQL scripts to transfer tables across the schemas and databases.
•	Used Apache-Maven tool to build, configure, and package and deploy an application project.
•	Worked on Axis implementation and used SOAP UI to test the SOAP.
•	Worked on XML, XSD and XSLT to parse the request and create the new one based on the specification.
•	Used jQuery and JSF validation framework for front end validations.
•	Used Git as source control management giving a huge speed advantage on centralized systems that must communicate with a server.
•	Migrated Applications between JBoss and WebLogic Application servers, build and release the issues.
•	Worked on Oracle 10g for applications containing Annotated EJB entities relating to JPA.
•	Responsible for writing JUnit test cases and Peer level testing.
•	Build & Deployment in WebSphere Application Server, &deployment on the Linux platform.

Environment: Java, Spring AOP, SOA, JMS, JMX, IBM MQ Series, REST, SOAP, AngularJS, JSP, JSF, SOAPUI, Hibernate, JPA, ORM, JDBC, JNDI, XML, XSD, JAXB, JAXP, Design Patterns, GIT, JUnit, ANT, JTA, Maven, WebSphere, PL/SQL, Oracle, NoSQL, Linux, Log4J, UML, Agile and Oracle 10g.
Genzeon technology solutions, Hyderabad, India.  Apr’14 – Dec’14 
Jr. Java Developer
Roles &Responsibilities:

•	Involved in Full Cycle of SDLC through Design, Development, Integration, and testing phases.
•	Designed and developed Spring MVC and SOAP based Web services to integrate multiple applications.
•	Integrated SOAP based web services into the web application to enable payments and claims through mobile apps.
•	Involved in the upgrade process of Spring 2.0 to 3.0 and Hibernate 2.0 to 3.0 to take advantage of new Spring and Hibernate features.
•	Webservices used Java 5, JSP, Servlets, EJB3.0, and deployed on WebLogic and WebSphere.
•	Jenkins to build integration and deployments to the various environments and aligned the release implementations.
•	Configured faces-config.xml and application-context.xml for JSF based.
•	Dynamic web pages are developed using JSF 2.0, JavaBeans, Xhtml, JavaScript and CustomTags.
•	Implemented state-specific business logic in Java code using Spring configurations.
•	Reviewed code and developed Junit test cases for all complex business scenarios and ensured 100% code coverage.
•	Implemented different types of spring controllers as per application requirements, DAO and service layer components using Spring/Hibernate Api’s and annotations. Extensively used Hibernate (HQL).
•	Extensively used Spring IOC, configured Application Context files, and performed database object mapping using Hibernate annotations, used Jasper Reports as a reporting tool.
•	Developed and deployed Session Beans and JPA Entities for database updates.
•	Developed client request validations and processing using JavaScript and HTML.
•	Used ANT for compilation and building JAR files, Used SVN version control tool.
•	Deployed applications on Web Logic Application Server and performed required configuration changes.

Environment: Java 1.6, JavaScript, AJAX, JSP, Servlet, JMS, Spring MVC 3.0, Hibernate 3.0, JSF, SOAP Web Services, Axis2, JPA, WebLogic Application Server, Jenkins, ANT, HTML, SVN, XML, Cloud Foundry, Unix Shell Scripting, SQL, Windows, and Oracle 9i, Tomcat, Jasper reports and Maven.